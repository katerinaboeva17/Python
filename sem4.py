# Задача 1
# Напишите программу, которая принимает на вход
# строку, и отслеживает, сколько раз каждый символ
# уже встречался. Количество повторов добавляется к
# символам с помощью постфикса формата _n.
# Input: a a a b c a a d c d d
# Output: a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2
# Для решения данной задачи используйте функцию.split()

# my_str = 'a a a b c a a d c d d'
# my_list = my_str.split()
# dict = {}
# for i in my_list:
#     if i in dict:
#         dict[i] += 1
#         print(f'{i}_{dict[i]}', end = ' ')
#     else: 
#         dict[i] = 0
#         print(i, end = ' ')

# Задача 2
# Пользователь вводит текст(строка). Словом считается
# последовательность непробельных символов идущих
# подряд, слова разделены одним или большим числом
# пробелов. Определите, сколько различных слов
# содержится в этом тексте.

# text = "She sells sea shells on the sea shore The shells \
# that she sells are sea shells I'm sure.So if she sells sea \
# shells on the sea shore I'm sure that the shells are sea \
# shore shells".lower()
# text = text.replace('.', ' ').split()
# set_text = set(text)
# print(len(set_text))

# Задача 3
# Ваня и Петя поспорили, кто быстрее решит
# следующую задачу: “Задана последовательность
# неотрицательных целых чисел. Требуется определить
# значение наибольшего элемента
# последовательности, которая завершается первым
# встретившимся нулем (число 0 не входит в
# последовательность)”. Однако 2 друга оказались не
# такими смышлеными. Никто из ребят не смог до
# конца сделать это задание. Они решили так: у кого
# будет меньше ошибок в коде, тот и выиграл спор. За
# помощью товарищи обратились к Вам, студентам.

# num = int(input())
# max = num
# while num != 0:
#     if num > max and num != 0:
#         max = num
#     num = int(input())
# print(f'{max = }')

# Home work
# Задача 1
# Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n = int(input('Введите количество чисел первого множества: '))
# list1 = []
# for i in range(n):
#     list1.append(int(input()))
# m = int(input('Введите количество чисел второго множества: '))
# list2 = []
# for j in range(m):
#     list2.append(int(input()))
# set1 = set(list1)
# set2 = set(list2)
# res = set1.intersection(set2)
# print(res)

# Задача 2
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

# n = int(input('Введите количество кустов: '))
# berry = []
# for j in range(n):
#     berry.append(int(input()))
# res = []
# sum_1 = berry[0] + berry[1] + berry[n-1]
# sum_n = berry[n-1] + berry[n-2] + berry[0]
# res.append(sum_1)
# res.append(sum_n)
# for i in range(1, len(berry) - 1):
#     res.append(berry[i-1] + berry[i] + berry[i+1])
#     i += 1
# max = res[0]
# for n in range(len(res)):
#     if res[n] > max:
#         max = res[n]
#     n += 1
# print(f'{max = }')







